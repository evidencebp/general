
# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_corrective
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Corrective
# Corrective : build_bug_fix_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((choose|take|set|use)\\s*(the|a)?\\s*correct|(not|isn\'t|doesn\'t)\\s+work(s|ing)?|doesn\'t recognize|caused a regression|bad initialization(s)?|buffer overflow(s)?|bug(s|z)?|bug(-| )?fix(es)?|(break|broke|breaking|broken)[\\s\\S]{0,20}(code|system|function|method)|crash(ing|s|ed)?|correct(ing|s|ed)?\\s*(a|the|some|few|this)|correct(ed|ion|ly|s)?|dangling pointer(s)?|deadlock(s)?|defect(s)?|double(-| )free|error(s)?|fail(ing|s|ed)?|failur(ing|e|es|ed)|fault(s)?|faulty initialization(s)?|fix(ed|es|ing)?|fix(-| )?in(s)?|fixing(s)?|fix(-| )?up(s)?|flaw(s|ed)?|heap overflow(s)?|incorrect(ly)?|(im|im-)?propermemory(-| )?leak(s)?|missing\\s(default value|initialization|switch case)(s)?|add(ing|s|ed)?\\smiss(ing|es|ed)?|mistake(s|n|nly)?|null pointer(s)?|over(-| )?run(s)?|patch(ed|ing)|problem(s)?|race condition(s)?|data race(s)?|repair(ing|s|ed)?|resource leak(s)?|leak(s)?|revert(ing|s|ed)?|segmentation fault(s)?|resolv(ing|e|es|ed)|workaround(s)?|wrong(nly)?|trouble(s)?|vulnerabilit(y|ies))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed)|miss(ing|es|ed)?|should|must|(have|has) to|avoid|prevent)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((choose|take|set|use)\\s*(the|a)?\\s*correct|(not|isn\'t|doesn\'t)\\s+work(s|ing)?|doesn\'t recognize|caused a regression|bad initialization(s)?|buffer overflow(s)?|bug(s|z)?|bug(-| )?fix(es)?|(break|broke|breaking|broken)[\\s\\S]{0,20}(code|system|function|method)|crash(ing|s|ed)?|correct(ing|s|ed)?\\s*(a|the|some|few|this)|correct(ed|ion|ly|s)?|dangling pointer(s)?|deadlock(s)?|defect(s)?|double(-| )free|error(s)?|fail(ing|s|ed)?|failur(ing|e|es|ed)|fault(s)?|faulty initialization(s)?|fix(ed|es|ing)?|fix(-| )?in(s)?|fixing(s)?|fix(-| )?up(s)?|flaw(s|ed)?|heap overflow(s)?|incorrect(ly)?|(im|im-)?propermemory(-| )?leak(s)?|missing\\s(default value|initialization|switch case)(s)?|add(ing|s|ed)?\\smiss(ing|es|ed)?|mistake(s|n|nly)?|null pointer(s)?|over(-| )?run(s)?|patch(ed|ing)|problem(s)?|race condition(s)?|data race(s)?|repair(ing|s|ed)?|resource leak(s)?|leak(s)?|revert(ing|s|ed)?|segmentation fault(s)?|resolv(ing|e|es|ed)|workaround(s)?|wrong(nly)?|trouble(s)?|vulnerabilit(y|ies))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed)|miss(ing|es|ed)?|should|must|(have|has) to|avoid|prevent)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))', '')))
 - 
# Corrective : build_valid_find_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed))[\\s\\S]{1,40}(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity|#|(camel|snake|kebab|flat|lower|upper)\\s*case|code review(\'s|s)?|comment(s)?|cosmetic(s)?|cr(s)?(-)?|documentation(s)?|format(s|ing)?|help|remark(s)?|space(s)?|style|styling|typo(s)?|typing( |-)?(error|mistake)(s)?|warning(s)?|white( |-)?space(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity|#|(camel|snake|kebab|flat|lower|upper)\\s*case|code review(\'s|s)?|comment(s)?|cosmetic(s)?|cr(s)?(-)?|documentation(s)?|format(s|ing)?|help|remark(s)?|space(s)?|style|styling|typo(s)?|typing( |-)?(error|mistake)(s)?|warning(s)?|white( |-)?space(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,40}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((error( |-)?check(ing)?|error( |-)?handling|error message(s)?|error report(s|ing)?|exception( |-)?handling|fixed( |-)?point|fix(ed) ticket(s)?|(fix(ed)?|bug)( )?( |-|:)( )?\\d+|(if|would)[\\s\\S]{0,40}go wrong)))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed))[\\s\\S]{1,40}(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity|#|(camel|snake|kebab|flat|lower|upper)\\s*case|code review(\'s|s)?|comment(s)?|cosmetic(s)?|cr(s)?(-)?|documentation(s)?|format(s|ing)?|help|remark(s)?|space(s)?|style|styling|typo(s)?|typing( |-)?(error|mistake)(s)?|warning(s)?|white( |-)?space(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity|#|(camel|snake|kebab|flat|lower|upper)\\s*case|code review(\'s|s)?|comment(s)?|cosmetic(s)?|cr(s)?(-)?|documentation(s)?|format(s|ing)?|help|remark(s)?|space(s)?|style|styling|typo(s)?|typing( |-)?(error|mistake)(s)?|warning(s)?|white( |-)?space(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,40}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((error( |-)?check(ing)?|error( |-)?handling|error message(s)?|error report(s|ing)?|exception( |-)?handling|fixed( |-)?point|fix(ed) ticket(s)?|(fix(ed)?|bug)( )?( |-|:)( )?\\d+|(if|would)[\\s\\S]{0,40}go wrong)))', '')))
 - 
# Corrective : build_negeted_bug_fix_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,20}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((choose|take|set|use)\\s*(the|a)?\\s*correct|(not|isn\'t|doesn\'t)\\s+work(s|ing)?|doesn\'t recognize|caused a regression|bad initialization(s)?|buffer overflow(s)?|bug(s|z)?|bug(-| )?fix(es)?|(break|broke|breaking|broken)[\\s\\S]{0,20}(code|system|function|method)|crash(ing|s|ed)?|correct(ing|s|ed)?\\s*(a|the|some|few|this)|correct(ed|ion|ly|s)?|dangling pointer(s)?|deadlock(s)?|defect(s)?|double(-| )free|error(s)?|fail(ing|s|ed)?|failur(ing|e|es|ed)|fault(s)?|faulty initialization(s)?|fix(ed|es|ing)?|fix(-| )?in(s)?|fixing(s)?|fix(-| )?up(s)?|flaw(s|ed)?|heap overflow(s)?|incorrect(ly)?|(im|im-)?propermemory(-| )?leak(s)?|missing\\s(default value|initialization|switch case)(s)?|add(ing|s|ed)?\\smiss(ing|es|ed)?|mistake(s|n|nly)?|null pointer(s)?|over(-| )?run(s)?|patch(ed|ing)|problem(s)?|race condition(s)?|data race(s)?|repair(ing|s|ed)?|resource leak(s)?|leak(s)?|revert(ing|s|ed)?|segmentation fault(s)?|resolv(ing|e|es|ed)|workaround(s)?|wrong(nly)?|trouble(s)?|vulnerabilit(y|ies))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed)|miss(ing|es|ed)?|should|must|(have|has) to|avoid|prevent)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,20}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((choose|take|set|use)\\s*(the|a)?\\s*correct|(not|isn\'t|doesn\'t)\\s+work(s|ing)?|doesn\'t recognize|caused a regression|bad initialization(s)?|buffer overflow(s)?|bug(s|z)?|bug(-| )?fix(es)?|(break|broke|breaking|broken)[\\s\\S]{0,20}(code|system|function|method)|crash(ing|s|ed)?|correct(ing|s|ed)?\\s*(a|the|some|few|this)|correct(ed|ion|ly|s)?|dangling pointer(s)?|deadlock(s)?|defect(s)?|double(-| )free|error(s)?|fail(ing|s|ed)?|failur(ing|e|es|ed)|fault(s)?|faulty initialization(s)?|fix(ed|es|ing)?|fix(-| )?in(s)?|fixing(s)?|fix(-| )?up(s)?|flaw(s|ed)?|heap overflow(s)?|incorrect(ly)?|(im|im-)?propermemory(-| )?leak(s)?|missing\\s(default value|initialization|switch case)(s)?|add(ing|s|ed)?\\smiss(ing|es|ed)?|mistake(s|n|nly)?|null pointer(s)?|over(-| )?run(s)?|patch(ed|ing)|problem(s)?|race condition(s)?|data race(s)?|repair(ing|s|ed)?|resource leak(s)?|leak(s)?|revert(ing|s|ed)?|segmentation fault(s)?|resolv(ing|e|es|ed)|workaround(s)?|wrong(nly)?|trouble(s)?|vulnerabilit(y|ies))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(correct(ing|s|ed)|fix(ed|s|es|ing)?|repair(ing|s|ed)?|revert(ing|s|ed)?|resolv(ing|e|es|ed)|miss(ing|es|ed)?|should|must|(have|has) to|avoid|prevent)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))', '')))
#Corrective - end
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_adaptive
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Adaptive
# Adaptive :build_adaptive_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '')))
#Adaptive :build_adaptive_action_regex()
+
(LENGTH(REGEXP_REPLACE(lower(message),'(add(s|ed|ing)?[\\s\\S]{1,50}(version|v\\d|ver\\d)|(^|\\s)implement(ed|s|ing)?\\s|(make(s)?|made|making)[\\s\\S]{1,50}consitent|updat(e|es|ed|ing)[\\s\\S]{1,25}to[\\s\\S]{1,25}\\d+.\\d|updat(e|es|ed|ing)\\s+(to\\s+)?\\d+\\.\\d|(add(s|ed|ing)?|delet(e|es|ed|ing)|updat(e|es|ed|ing))\\s+([a-z  -Z0-9_\\*\\.])+\\.[a-zA-Z]{1,4}|(^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(upgrad(e|es|ed|ing)|configur(e|es|ed|ing)|(keep|change)\\s+(the\\s+)?default|new|clear(s|ed|ing)?|add(s|ed|ing)?|(im)?port(s|ed|ing)?|(un)?hid(e|es|den)|updat(e|es|ed|ing)|disabl(e|es|ed|ing)|enabl(e|es|ed|ing)|quirk(s|ed|ing)?|allow(s|ed|ing)?|provid(e|es|ed|ing)|remov(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|^\\[(IMP|imp)\\]|support(s|ed|ing)?\\sfor\\s|show(es|ed|ing)?[\\s\\S]instead)', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(add(s|ed|ing)?[\\s\\S]{1,50}(version|v\\d|ver\\d)|(^|\\s)implement(ed|s|ing)?\\s|(make(s)?|made|making)[\\s\\S]{1,50}consitent|updat(e|es|ed|ing)[\\s\\S]{1,25}to[\\s\\S]{1,25}\\d+.\\d|updat(e|es|ed|ing)\\s+(to\\s+)?\\d+\\.\\d|(add(s|ed|ing)?|delet(e|es|ed|ing)|updat(e|es|ed|ing))\\s+([a-z  -Z0-9_\\*\\.])+\\.[a-zA-Z]{1,4}|(^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(upgrad(e|es|ed|ing)|configur(e|es|ed|ing)|(keep|change)\\s+(the\\s+)?default|new|clear(s|ed|ing)?|add(s|ed|ing)?|(im)?port(s|ed|ing)?|(un)?hid(e|es|den)|updat(e|es|ed|ing)|disabl(e|es|ed|ing)|enabl(e|es|ed|ing)|quirk(s|ed|ing)?|allow(s|ed|ing)?|provid(e|es|ed|ing)|remov(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|^\\[(IMP|imp)\\]|support(s|ed|ing)?\\sfor\\s|show(es|ed|ing)?[\\s\\S]instead)', '')))
# Adaptive :build_non_adaptive_context()
-
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|bug|helper|miss(ing|ed)|to( |-)?do(s)?|warning(s)?)|^[\\s\\S]{0,50}(transla(tion|et|eted|ets|ting)|readme(.md)?)|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(remov(e|es|ed|ing)))\\s[\\s\\S]{0,50}(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented|([a-z  -Z0-9_\\*\\.])+\\.[a-zA-Z]{1,4}))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|bug|helper|miss(ing|ed)|to( |-)?do(s)?|warning(s)?)|^[\\s\\S]{0,50}(transla(tion|et|eted|ets|ting)|readme(.md)?)|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(remov(e|es|ed|ing)))\\s[\\s\\S]{0,50}(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented|([a-z  -Z0-9_\\*\\.])+\\.[a-zA-Z]{1,4}))', '')))
# Adaptive :build_non_adaptive_linguistic()
-
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)((un)?hid(e|es|den)|add(s|ed|ing)?|allow(s|ed|ing)?|buil(t|ds|ing)|calibirat(e|es|ed|ing)|configure|creat(e|es|ing)|deferr(ed|s|ing)?|disabl(e|es|ed|ing)|enhanc(e|es|ed|ing)|extend(s|ed|ing)?|form(ed|s|ing)?|implement(ed|s|ing)?|import(s|ed|ing)?|introduc(e|es|ed|ing)|port(s|ed|ing)?|provid(e|es|ed|ing)|report(s|ed|ing)?|support(s|ed|ing)?|updat(e|es|ed|ing)|upgrad(e|es|ed|ing)))\\s[\\s\\S]{0,50}(ability|configuration|conversion|debug|new|possibility|support|test(s)?|tweak(s)?|mode|option|algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '')))
# Adaptive - end
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_English
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# English
# English :build_English_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(about|all|also|and|because|but|can|come|could|day|even|find|first|for|from|get|give|have|her|here|him|his|how|into|its|just|know|like|look|make|man|many|more|new|not|now|one|only|other|our|out|people|say|see|she|some|take|tell|than|that|the|their|them|then|there|these|they|thing|think|this|those|time|two|use|very|want|way|well|what|when|which|who|will|with|would|year|you|your)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(about|all|also|and|because|but|can|come|could|day|even|find|first|for|from|get|give|have|her|here|him|his|how|into|its|just|know|like|look|make|man|many|more|new|not|now|one|only|other|our|out|people|say|see|she|some|take|tell|than|that|the|their|them|then|there|these|they|thing|think|this|those|time|two|use|very|want|way|well|what|when|which|who|will|with|would|year|you|your)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_positive_refactor
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Refactor :build_refactor_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '')))
# Refactor :build_sepereted_term(removal)
+
(LENGTH(REGEXP_REPLACE(lower(message),'(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)', '')))
# Refactor :build_refactor_goals_regex()
+
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_non_code_refactor
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Refactor :build_non_code_perfective_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'(convert(ed|s|ing)?((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))support(s|ed|ing)?|(make|made|making|makes)((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))work|(make|made|making|makes)((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))sense|improv(e|es|ed|ing) handling|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(warning(s)?|format(ting)?|indentation(s)?))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(-| )?up(s)?)|(^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)[\\s\\S]{0,25}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented|fix(es|ed|ing)?|(get|got|getting) rid|support(s|ed|ing)?))(\\s|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity|warning(s)?|format(ting)?|indentation(s)?)))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(convert(ed|s|ing)?((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))support(s|ed|ing)?|(make|made|making|makes)((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))work|(make|made|making|makes)((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))sense|improv(e|es|ed|ing) handling|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(warning(s)?|format(ting)?|indentation(s)?))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(-| )?up(s)?)|(^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)[\\s\\S]{0,25}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented|fix(es|ed|ing)?|(get|got|getting) rid|support(s|ed|ing)?))(\\s|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity|warning(s)?|format(ting)?|indentation(s)?)))', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_non_positive_linguistic_refactor
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Refactor :build_non_positive_linguistic(build_refactor_regex())
-
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_non_positive_linguistic_refactor_goals
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Refactor :build_non_positive_linguistic(build_refactor_goals_regex())
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(better|improv(e|es|ed|ing)|increas(e|es|ed|ing)|reduc(e|es|ed|ing)|worse|make|more|less))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(abstraction|coherence|cohesion|complexity|correctness|coupling|dependability|duplication|efficiency|extensibility|flexibility|maintainability|naming|performance|portability|quality|readability|reliability|re(-| )?use|re(-| )?usability|security|simplicity|testability|testable|re(-| )?usable|readable|portable|maintainable|flexible|efficient|encapsulation)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_non_positive_linguistic_refactor_removal
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Refactor :build_non_positive_linguistic(build_sepereted_term(removal))
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(can|could|ha(ve|s|d)|may|might|must|need|ought|shall|should|will|would))[\\s\\S]{0,10}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(aren\'t|didn\'t|don\'t|doesn\'t|isn\'t|lack|n\'t|never|no|nobody|none|not|nothing|weren\'t|without|won\'t))[\\s\\S]{0,10}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(for(get|gets|got|geting)|allow(s|ed|ing)?))[\\s\\S]{0,10}((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(add(s|ed|ing)?[\\s\\S]{1,50}helper(s)?|us(e|es|ed|ing)[\\s\\S]{1,50}instead|split(s|ing)?[\\s\\S]{1,50}into|break(s|ing)?[\\s\\S]{1,50}into|separat(e|e s|ed|ing)[\\s\\S]{1,50}into|replac(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|remov(e|es|ed|ing)[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|kill(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|drop(s|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented)|mov(e|es|ed|ing)?[\\s\\S]{1,50}(unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_documentation_entities_context_refactor
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Refactor :build_documentation_entities_context(build_refactor_regex())
(LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes))[\\s\\S]{0,10}(((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing)?(-| )?up(s)?|call(s|ed|ing)?[\\s\\S]{1,50}instead|collaps(e|es|ed|ing)|consolidat(e|es|ed|ing)|decompos(e|es|ed|ing)|drop(ed|s|ing)?( back)|encapsulat(e|es|ed|ing)|gereneliz(e|es|ed|ing)|optimiz(e|es|ed|ing|ation|ations)|pull(ed|s|ing)? (up|down)|re(-)?(write|wrote)|re(-| )?factor(ed|s|ing|ings)?|re(-)?implement(ed|s|ing)?|renam(e|es|ed|ing|ings)|better nam(e|es|ing)|re(-)?organiz(e|es|ed|ing)|re(-)?organization|re(-)?work(ed|s|ing|ings)?|reorg|simplif(y|es|ied|ying|ication)|suppress(es|ed|ing)? warning(s)?|unif(y|ies|ied|ing)|uninline|beef(ed|s|ing)? up|refactor(ing)?(s)?|code improvement(s)?|revis(e|es|ed|ing)|re(-)?construct(s|ed|ing)?|re(-)?(write|write|wrote|writing)|re(-)?cod(e|ed|es|ing)|factor(ed|s|ing)? out|re(-| )?packag(e|es|ed|ing))(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))|((((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(clean(ing|s|ed)?clean(ing)?(-| )?up(s)?|combin(e|es|ed|ing)|compos(e|es|ed|ing)|de(-| )?compos(e|es|ed|ing)|convert(ed|s|ing)?|dead|deprecat(e|es|ed|ing)|drop(ed|s|ing)?|duplicat(e|es|ed|ing)|extract(ed|s|ing)?|improv(e|es|ed|ing)|increas(e|es|ed|ing)|(make|makes|made|making)|mov(e|es|ed|ing)|rebuil(d|ds|ding|t)|replac(e|es|ed|ing)|redundant|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|separat(e|e s|ed|ing)|split(s|ing)?|subsitut(e|es|ed|ing)|tid(y|ying|ied)|short(:?en|er|ing|s)?|polish(ed|es|ing)?|(get|got|getting) rid|encapsulate|hide(e|es|ed|ing)|un(-| )?hid(e|es|ed|ing)|parameteriz(e|es|ed|ing)|substitut(e|es|ed|ing)|unnecessary|unneeded|unused|(not|never|no longer) used|no longer needed|redundant|useless|duplicate(d)?|deprecated|obsolete(d)?|commented))((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)|(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)[\\s\\S]{0,50}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(algorithm(s)?|assertion(s)?|assignment(s)?|class(es)?|code|collection(s)?|conditional(s)?|constant(s)?|constructor(s)?|control|definition(s)?|delegate|delegation|design pattern(s)?|error(-| )?code(s)?|exception(s)?|field(s)?|flag(s)?|function(s)?|getter(s)?|guard clause(s)?|hierarch(y|ies)|implementation(s)?|inheritance|inline|interface(s)?|internal|macro(s)?|magic number(s)?|member(s)?|method(s)?|modifier(s)?|null object(s)?|object(s)?|parameter(s)?|patch(es)?|pointer(s)?|polymorphism|quer(y|ies)|reference(s)?|ref(s)?|return type|setter(s)?|static|structure(s)?|sub(-| )?class(es)?|super(-| )?class(es)?|(sub)?(-| )?system(s)?|template(s)?|type(s)?|uninline|variable(s)?|handler|plugin|unit(s)?|contravariant|covariant|action(s)?|queue(s)?|stack(s)?|driver(s)?|storage|tool(s)?|module(s)?|log(s)?|setting(s)?|fall( |-)back(s)?|memory|param(s)?|volatile|file(s)?|generic(s)?|initialization(s)?|public|protected|private|framework|singelton|declaration(s)?|init|destructor(s)?|instances(s)?|primitive(s)?|(helper|utility|auxiliary) function(s)?)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)))|((^|^[\\s\\S]{0,25}(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))(clean(ing|s|ed)?(-| )?up(s)?|cleaner|deprecat(e|es|ed|ing)|extract(ed|s|ing)?|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|tid(y|ying|ied) up|improv(e|ed|es|ing|ement|ements)|re(-|)?organiz(e|es|ed|ing)|re(-|)?structur(e|es|ed|ing)|(helper|utility|auxiliary) function(s)?|(move|moved|moves|moving) to|separat(e|es|ed|ing)|split(s|ing)?|->)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))))', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_refactor
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Refactor
general.bq_positive_refactor(message)
 - general.bq_non_code_refactor(message)
 - general.bq_non_positive_linguistic_refactor(message)
 - general.bq_non_positive_linguistic_refactor_goals(message)
 - general.bq_non_positive_linguistic_refactor_removal(message)
 - general.bq_documentation_entities_context_refactor(message)
# Refactor - end 
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_just_perfective
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Just Perfective
# Perfective :build_perfective_regex()
(LENGTH(REGEXP_REPLACE(lower(message),'((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '@'))-LENGTH(REGEXP_REPLACE(lower(message),'((\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|)(change( |-)?log|comment(s)?|copy( |-)?right(s)?|doc(s)?|documentation|explanation(s)?|man( |-)?page(s)?|manual|note(s)?|readme(.md)?|translation(s)?|java( |-)?doc(s)?|java( |-)?documentation|example(s)?|diagram(s)?|guide(s)?|icon(s)?|doc( |-)?string(s)?|tutorials(s)?|help|man|doc( |-)?string(s)?|desc(ription)?(s)?|copy( |-)?right(s)?|explanation(s)?|release notes|indentation(s)?|style|todo(s)?|typo(s)?|verbosity)(\\s|\\.|\\?|\\!|\\[|\\]|\\(|\\)|\\:|^|$|\\,|\'|"|/|#|\\$|\\%|&|\\*|\\+|=|`|;|<|>|@|~|{|}|\\|))', '')))
 ) 
 ; 

# Run in Starndad sql 
CREATE OR REPLACE FUNCTION 
general.bq_perfective
 (message string) 
 RETURNS int64 
AS (
# Model language based on  commit: 01db928 
# Perfective
general.bq_just_perfective(message)
 + general.bq_refactor(message)
# Perfective - end 
 ) 
 ; 
